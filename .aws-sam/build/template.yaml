AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: TaxDoc v2.0 Migration - Enhanced Features
Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
    - dev
    - staging
    - prod
Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Environment:
      Variables:
        ENVIRONMENT:
          Ref: Environment
Resources:
  EnhancedExtractionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: EnhancedExtractionFunction
      Handler: enhanced_extraction_handler.lambda_handler
      Environment:
        Variables:
          UPLOAD_BUCKET:
            Ref: UploadBucket
          RESULTS_TABLE:
            Ref: DocumentsTable
      Events:
        ProcessDocument:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaxDocApi
            Path: /process-document-enhanced
            Method: post
      Policies:
      - S3FullAccessPolicy:
          BucketName:
            Ref: UploadBucket
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DocumentsTable
      - Statement:
          Effect: Allow
          Action:
          - textract:*
          - bedrock:InvokeModel
          Resource: '*'
    Metadata:
      SamResourceId: EnhancedExtractionFunction
  BatchUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BatchUploadFunction
      Handler: batch_upload_enhanced.lambda_handler
      Environment:
        Variables:
          BATCH_TABLE:
            Ref: BatchJobsTable
          PROCESSING_QUEUE:
            Ref: ProcessingQueue
      Events:
        BatchUpload:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaxDocApi
            Path: /batch-upload-enhanced
            Method: post
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: BatchJobsTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - ProcessingQueue
            - QueueName
    Metadata:
      SamResourceId: BatchUploadFunction
  DownloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DownloadFunction
      Handler: download_enhanced.lambda_handler
      Environment:
        Variables:
          RESULTS_TABLE:
            Ref: DocumentsTable
      Events:
        Download:
          Type: Api
          Properties:
            RestApiId:
              Ref: TaxDocApi
            Path: /download/{doc_id}
            Method: get
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: DocumentsTable
      - Statement:
          Effect: Allow
          Action:
          - ses:SendEmail
          Resource: '*'
    Metadata:
      SamResourceId: DownloadFunction
  SNSAlertsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SNSAlertsFunction
      Handler: sns_alerts.lambda_handler
      Environment:
        Variables:
          ALERTS_TOPIC:
            Ref: AlertsTopic
      Events:
        DocumentStream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - DocumentsTable
              - StreamArn
            StartingPosition: LATEST
        ProcessingQueue:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - ProcessingQueue
              - Arn
      Policies:
      - SNSPublishMessagePolicy:
          TopicName:
            Fn::GetAtt:
            - AlertsTopic
            - TopicName
    Metadata:
      SamResourceId: SNSAlertsFunction
  TaxDocApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Environment
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
  DocumentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: DrDocDocuments-${Environment}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
      - AttributeName: document_id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: document_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: UserIndex
        KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  BatchJobsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: BatchJobs-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: batch_id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: batch_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: UserBatchIndex
        KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: taxdoc-uploads-v2-${Environment}-${AWS::AccountId}
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          - POST
          - DELETE
          - HEAD
          AllowedOrigins:
          - '*'
  ProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: TaxDoc-Processing-v2-${Environment}
      VisibilityTimeoutSeconds: 180
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - ProcessingDLQ
          - Arn
        maxReceiveCount: 3
  ProcessingDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: TaxDoc-Processing-DLQ-${Environment}
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: TaxDoc-Alerts-${Environment}
  AlertsEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn:
        Ref: AlertsTopic
      Endpoint: admin@taxdoc.com
Outputs:
  ApiGatewayUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${TaxDocApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
  UploadBucketName:
    Description: S3 bucket for uploads
    Value:
      Ref: UploadBucket
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UploadBucket
  DocumentsTableName:
    Description: DynamoDB table for documents
    Value:
      Ref: DocumentsTable
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DocumentsTable
