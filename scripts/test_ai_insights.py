#!/usr/bin/env python3
"""
Test AI Insights Feature
Verifies that the system generates and displays AI insights
"""
import json
import base64
import requests
import sys
import os

def test_ai_insights():
    """Test AI insights generation with a sample document"""
    
    API_ENDPOINT = "https://fzgyzpo535.execute-api.us-east-1.amazonaws.com/mvp/process-document"
    
    # Create test payload with sample W-2 data
    test_payload = {
        "filename": "test_w2.pdf",
        "file_content": "JVBERi0xLjQKJcOkw7zDtsO4CjIgMCBvYmoKPDwKL0xlbmd0aCAzIDAgUgo+PgpzdHJlYW0KQNC0xLjQKJcOkw7zDtsO4CjIgMCBvYmoKPDwKL0xlbmd0aCAzIDAgUgo+PgpzdHJlYW0K"
    }
    
    print("🧪 Testing AI Insights Feature")
    print("===============================")
    print(f"API Endpoint: {API_ENDPOINT}")
    print("")
    
    try:
        response = requests.post(
            API_ENDPOINT,
            json=test_payload,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            
            print("✅ API request successful")
            print(f"Document Type: {result.get('document_type', 'Unknown')}")
            
            # Check for AI insights
            ai_insights = result.get('ai_insights')
            
            if ai_insights:
                print("\n🎉 AI Insights Found!")
                print("====================")
                
                # Display summary
                if ai_insights.get('summary'):
                    print(f"📝 Summary: {ai_insights['summary']}")
                
                # Display key insights
                if ai_insights.get('insights'):
                    print("\n💡 Key Insights:")
                    for i, insight in enumerate(ai_insights['insights'], 1):
                        print(f"   {i}. {insight}")
                
                # Display risk and action info
                print(f"\n⚠️  Risk Level: {ai_insights.get('risk_level', 'Unknown')}")
                print(f"🎯 Action Required: {'Yes' if ai_insights.get('action_required') else 'No'}")
                print(f"🤖 Generated by: {ai_insights.get('generated_by', 'Unknown')}")
                print(f"📊 Confidence: {ai_insights.get('confidence', 0):.1%}")
                
                return True
            else:
                print("❌ No AI insights found in response")
                print("Response structure:")
                print(json.dumps(result, indent=2))
                return False
                
        else:
            print(f"❌ API request failed: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"❌ Error making API request: {e}")
        return False

if __name__ == "__main__":
    print("🤖 TaxDoc AI Insights Test")
    print("===========================")
    
    success = test_ai_insights()
    
    if success:
        print("\n🎉 AI Insights feature is working!")
        print("The system successfully generates AI-powered insights.")
    else:
        print("\n❌ AI Insights feature needs attention")
        print("Check the backend implementation and Claude integration.")
        
    sys.exit(0 if success else 1)